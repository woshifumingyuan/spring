spring.data.rest.base-path=/api

spring.datasource.url=jdbc:mysql://localhost:3306/db_example
spring.datasource.username=springuser
spring.datasource.password=ThePassword

# JPA配置
#hibernate提供了根据实体类自动维护数据库表结构的功能，可通过spring.jpa.hibernate.ddl-auto来配置，有下列可选项：
#1、create：启动时删除上一次生成的表，并根据实体类生成表，表中数据会被清空。
#2、create-drop：启动时根据实体类生成表，sessionFactory关闭时表会被删除。
#3、update：启动时会根据实体类生成表，当实体类属性变动的时候，表结构也会更新，在初期开发阶段使用此选项。
#4、validate：启动时验证实体类和数据表是否一致，在我们数据结构稳定时采用此选项。
#5、none：不采取任何措施。
spring.jpa.hibernate.ddl-auto=update
#spring.jpa.show-sql用来设置hibernate操作的时候在控制台显示其真实的sql语句。
spring.jpa.show-sql=true
#让控制器输出的json字符串格式更美观。
spring.jackson.serialization.indent-output=true
spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.MySQL8Dialect

#缓存配置
#切换缓存
#spring.cache.type=simple
#spring.cache.cache-names=people
#spring.cache.ehcache.config=classpath:/config/ehcache.xml

#redis配置
#redis
#database name
spring.redis.database=0
#server host
spring.redis.host=192.168.195.128
#server password
spring.redis.password=
#connection port
spring.redis.port=6378

#logging.path = var/output